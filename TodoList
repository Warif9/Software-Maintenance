import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class TodoList extends JFrame implements ActionListener {
    private JTextField taskField;
    private JList<String> taskList;
    private JButton addButton;
    private JButton editButton;
    private JButton clearButton;
    private DefaultListModel<String> listModel;
    private int selectedIndex;

    public TodoList() {
        setTitle("Todo List");
        setSize(400, 300);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Create components
        taskField = new JTextField(20);
        addButton = new JButton("Add Task");
        addButton.addActionListener(this);

        editButton = new JButton("Edit Task");
        editButton.addActionListener(this);
        editButton.setEnabled(false);

        clearButton = new JButton("Clear");
        clearButton.addActionListener(this);

        listModel = new DefaultListModel<>();
        taskList = new JList<>(listModel);
        taskList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        taskList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                selectedIndex = taskList.getSelectedIndex();
                editButton.setEnabled(selectedIndex != -1);
            }
        });
        JScrollPane scrollPane = new JScrollPane(taskList);

        // Create panel
        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        panel.add(taskField, BorderLayout.NORTH);
        panel.add(scrollPane, BorderLayout.CENTER);

        JPanel buttonPanel = new JPanel();
        buttonPanel.add(addButton);
        buttonPanel.add(editButton);
        buttonPanel.add(clearButton);
        panel.add(buttonPanel, BorderLayout.SOUTH);

        // Add panel to frame
        add(panel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == addButton) {
            String task = taskField.getText();

            if (!task.isEmpty()) {
                listModel.addElement(task);
                taskField.setText("");
            }
        } else if (e.getSource() == editButton) {
            String editedTask = taskField.getText();

            if (!editedTask.isEmpty() && selectedIndex != -1) {
                listModel.set(selectedIndex, editedTask);
                taskField.setText("");
                selectedIndex = -1;
                editButton.setEnabled(false);
            }
        } else if (e.getSource() == clearButton) {
            listModel.clear();
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                TodoList todoList = new TodoList();
                todoList.setVisible(true);
            }
        });
    }
}
